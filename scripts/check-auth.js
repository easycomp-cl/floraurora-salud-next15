#!/usr/bin/env node

/**
 * Script para verificar la configuraci√≥n de autenticaci√≥n
 * Ejecuta: node scripts/check-auth.js
 */

const fs = require('fs');
const path = require('path');

console.log('üîç Verificando configuraci√≥n de autenticaci√≥n...\n');

// Verificar archivo .env.local
const envPath = path.join(process.cwd(), '.env.local');
if (fs.existsSync(envPath)) {
  console.log('‚úÖ Archivo .env.local encontrado');
  
  const envContent = fs.readFileSync(envPath, 'utf8');
  const lines = envContent.split('\n');
  
  let hasSupabaseUrl = false;
  let hasSupabaseKey = false;
  
  lines.forEach(line => {
    if (line.includes('NEXT_PUBLIC_SUPABASE_URL')) {
      hasSupabaseUrl = true;
      const value = line.split('=')[1];
      console.log(`   NEXT_PUBLIC_SUPABASE_URL: ${value ? 'Configurado' : 'Vac√≠o'}`);
    }
    if (line.includes('NEXT_PUBLIC_SUPABASE_ANON_KEY')) {
      hasSupabaseKey = true;
      const value = line.split('=')[1];
      console.log(`   NEXT_PUBLIC_SUPABASE_ANON_KEY: ${value ? 'Configurado' : 'Vac√≠o'}`);
    }
  });
  
  if (!hasSupabaseUrl || !hasSupabaseKey) {
    console.log('‚ùå Faltan variables de entorno requeridas');
  } else {
    console.log('‚úÖ Todas las variables de entorno est√°n configuradas');
  }
} else {
  console.log('‚ùå Archivo .env.local NO encontrado');
  console.log('   Crea el archivo .env.local en la ra√≠z del proyecto');
}

// Verificar package.json
const packagePath = path.join(process.cwd(), 'package.json');
if (fs.existsSync(packagePath)) {
  const packageJson = JSON.parse(fs.readFileSync(packagePath, 'utf8'));
  const dependencies = packageJson.dependencies || {};
  
  console.log('\nüì¶ Dependencias de autenticaci√≥n:');
  if (dependencies['@supabase/supabase-js']) {
    console.log('   ‚úÖ @supabase/supabase-js instalado');
  } else {
    console.log('   ‚ùå @supabase/supabase-js NO instalado');
  }
  
  if (dependencies['@supabase/ssr']) {
    console.log('   ‚úÖ @supabase/ssr instalado');
  } else {
    console.log('   ‚ùå @supabase/ssr NO instalado');
  }
}

// Verificar estructura de archivos
console.log('\nüìÅ Estructura de archivos:');
const filesToCheck = [
  'src/utils/supabase/client.ts',
  'src/utils/supabase/server.ts',
  'src/lib/hooks/useAuth.ts',
  'src/components/auth/ProtectedRoute.tsx',
  'src/middleware.ts'
];

filesToCheck.forEach(file => {
  const filePath = path.join(process.cwd(), file);
  if (fs.existsSync(filePath)) {
    console.log(`   ‚úÖ ${file}`);
  } else {
    console.log(`   ‚ùå ${file} NO encontrado`);
  }
});

// Recomendaciones
console.log('\nüí° Recomendaciones:');
console.log('1. Aseg√∫rate de que el archivo .env.local est√© en la ra√≠z del proyecto');
console.log('2. Verifica que las credenciales de Supabase sean correctas');
console.log('3. Reinicia el servidor de desarrollo despu√©s de crear/modificar .env.local');
console.log('4. Verifica que Supabase est√© funcionando y accesible');
console.log('5. Revisa la consola del navegador para errores espec√≠ficos');

console.log('\nüîß Para m√°s ayuda, revisa el archivo ENV_SETUP.md');
