"use client";

import { Button } from "@/components/ui/button";
import {
  Card,
  CardContent,
  CardDescription,
  CardHeader,
  CardTitle,
} from "@/components/ui/card";
import { PaymentPlanFormData } from "@/lib/validations/professional-signup";

interface PaymentPlanStepProps {
  data: PaymentPlanFormData;
  onChange: (data: PaymentPlanFormData) => void;
  errors: Record<string, string>;
  onNext: () => void;
  onPrevious: () => void;
}

const paymentPlans = [
  {
    id: "light" as const,
    name: "Plan Light",
    price: "10%",
    period: "por sesi√≥n",
    features: [
      "Agendamiento online",
      "Aviso autom√°tico con link de Google Meet",
      "Ficha virtual del paciente",
      "Emisi√≥n autom√°tica de boleta SII",
      "Videollamada Google Meet",
      "Recepci√≥n de pagos de pacientes",
      "Transferencia semanal (segundo d√≠a h√°bil)",
    ],
    description:
      "Renovaci√≥n autom√°tica mensual. Solo correo con link de Meet (sin confirmaci√≥n autom√°tica al paciente)",
  },
  {
    id: "monthly" as const,
    name: "Plan Mensual",
    price: "$24.990",
    period: "mensual",
    features: [
      "Agendamiento online",
      "Aviso autom√°tico de confirmaci√≥n v√≠a mail",
      "Aviso autom√°tico de recordatorio v√≠a mail",
      "Ficha virtual del paciente",
      "Emisi√≥n autom√°tica de boleta SII",
      "Visualizaci√≥n y Publicidad en p√°gina principal",
      "Videollamada Google Meet",
      "Recepci√≥n de pagos de pacientes",
      "Transferencia semanal (segundo d√≠a h√°bil)",
    ],
    description:
      "Precio preferencial por marcha blanca. Incluye todos los servicios de la aplicaci√≥n",
    note: "Renovaci√≥n autom√°tica mes a mes si no se avisa retiro hasta el √∫ltimo d√≠a del mes",
  },
];

export default function PaymentPlanStep({
  data,
  onChange,
  errors,
  onNext,
  onPrevious,
}: PaymentPlanStepProps) {
  const handlePlanChange = (planType: "light" | "monthly") => {
    onChange({
      ...data,
      plan_type: planType,
    });
  };

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    onNext(); // Siempre llamar onNext, la validaci√≥n se maneja en el padre
  };

  return (
    <Card className="mx-auto max-w-4xl lg:max-w-6xl xl:max-w-7xl">
      <CardHeader>
        <CardTitle className="text-xl">Selecciona tu Plan de Pago</CardTitle>
        <CardDescription>
          Elige el plan que mejor se adapte a tus necesidades profesionales. El
          pago se realizar√° despu√©s de la aprobaci√≥n y validaci√≥n de tus
          documentos.
        </CardDescription>
        <div className="bg-blue-50 border border-blue-200 rounded-lg p-3 mt-2">
          <p className="text-sm text-blue-800">
            <strong>üí° Informaci√≥n importante:</strong> Los valores de las
            prestaciones ser√°n designados por cada profesional dentro de un
            rango entre $21.000 - $50.000. Puedes cambiar de plan despu√©s de
            registrarte.
          </p>
        </div>
      </CardHeader>
      <CardContent>
        <form onSubmit={handleSubmit}>
          <div className="grid gap-8 lg:gap-12">
            {/* Servicios Incluidos */}
            <div className="grid gap-4">
              <h3 className="text-lg font-semibold">
                Servicios Incluidos en Ambos Planes
              </h3>
              <div className="bg-gray-50 border border-gray-200 rounded-lg p-4">
                <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                  <div className="space-y-2">
                    <div className="flex items-center text-sm">
                      <span className="text-blue-500 mr-2">üìÖ</span>
                      <span>
                        <strong>Agendamiento online</strong> - Sistema completo
                        de reservas
                      </span>
                    </div>
                    <div className="flex items-center text-sm">
                      <span className="text-blue-500 mr-2">üìß</span>
                      <span>
                        <strong>Aviso autom√°tico</strong> - Confirmaci√≥n y
                        recordatorios
                      </span>
                    </div>
                    <div className="flex items-center text-sm">
                      <span className="text-blue-500 mr-2">üìã</span>
                      <span>
                        <strong>Ficha virtual</strong> - Historial completo del
                        paciente
                      </span>
                    </div>
                    <div className="flex items-center text-sm">
                      <span className="text-blue-500 mr-2">üßæ</span>
                      <span>
                        <strong>Boleta SII</strong> - Emisi√≥n autom√°tica
                      </span>
                    </div>
                  </div>
                  <div className="space-y-2">
                    <div className="flex items-center text-sm">
                      <span className="text-blue-500 mr-2">üåü</span>
                      <span>
                        <strong>Visualizaci√≥n web</strong> - Publicidad en
                        p√°gina principal
                      </span>
                    </div>
                    <div className="flex items-center text-sm">
                      <span className="text-blue-500 mr-2">üìπ</span>
                      <span>
                        <strong>Videollamada</strong> - Google Meet integrado
                      </span>
                    </div>
                    <div className="flex items-center text-sm">
                      <span className="text-blue-500 mr-2">üí≥</span>
                      <span>
                        <strong>Recepci√≥n pagos</strong> - Cobro autom√°tico a
                        pacientes
                      </span>
                    </div>
                    <div className="flex items-center text-sm">
                      <span className="text-blue-500 mr-2">üí∞</span>
                      <span>
                        <strong>Transferencias</strong> - Segundo d√≠a h√°bil
                        semanal
                      </span>
                    </div>
                  </div>
                </div>
              </div>
            </div>

            {/* Selecci√≥n de Plan */}
            <div className="grid gap-4">
              <h3 className="text-lg font-semibold">Planes Disponibles</h3>
              <div className="grid grid-cols-1 lg:grid-cols-2 gap-6 lg:gap-8">
                {paymentPlans.map((plan) => (
                  <Card
                    key={plan.id}
                    className={`cursor-pointer transition-all ${
                      data.plan_type === plan.id
                        ? "ring-2 ring-primary border-primary"
                        : "hover:border-primary/50"
                    }`}
                    onClick={() => handlePlanChange(plan.id)}
                  >
                    <CardHeader className="pb-3">
                      <div className="flex flex-col gap-3">
                        <div className="flex flex-col sm:flex-row sm:items-start sm:justify-between gap-2">
                          <div className="flex-1">
                            <CardTitle className="text-lg">
                              {plan.name}
                            </CardTitle>
                            <CardDescription className="mt-1">
                              {plan.description}
                            </CardDescription>
                          </div>
                          <div className="text-center sm:text-right flex-shrink-0">
                            <div className="text-2xl font-bold text-primary">
                              {plan.price}
                            </div>
                            <div className="text-sm text-muted-foreground">
                              /{plan.period}
                            </div>
                          </div>
                        </div>
                      </div>
                    </CardHeader>
                    <CardContent>
                      <ul className="space-y-2 mb-4">
                        {plan.features.map((feature, index) => (
                          <li key={index} className="flex items-center text-sm">
                            <span className="text-green-500 mr-2">‚úì</span>
                            {feature}
                          </li>
                        ))}
                      </ul>
                      {plan.note && (
                        <div className="bg-yellow-50 border border-yellow-200 rounded-lg p-3">
                          <p className="text-xs text-yellow-800">
                            <strong>‚ÑπÔ∏è Nota:</strong> {plan.note}
                          </p>
                        </div>
                      )}
                    </CardContent>
                  </Card>
                ))}
              </div>
              {errors.plan_type && (
                <p className="text-sm text-red-600">{errors.plan_type}</p>
              )}
            </div>

            {/* Resumen */}
            {data.plan_type && (
              <Card className="bg-muted/50">
                <CardContent className="p-4">
                  <h4 className="font-semibold mb-3">
                    Resumen de tu selecci√≥n:
                  </h4>
                  <div className="flex flex-col sm:flex-row sm:justify-between sm:items-center gap-2">
                    <div className="flex-1">
                      <span className="text-sm">
                        {
                          paymentPlans.find((p) => p.id === data.plan_type)
                            ?.name
                        }
                      </span>
                    </div>
                    <div className="text-center sm:text-right">
                      <span className="font-bold text-primary text-lg">
                        {
                          paymentPlans.find((p) => p.id === data.plan_type)
                            ?.price
                        }
                        <span className="text-sm font-normal text-muted-foreground">
                          {data.plan_type === "light" ? " por sesi√≥n" : "/mes"}
                        </span>
                      </span>
                    </div>
                  </div>
                  <div className="mt-3 p-3 bg-blue-50 border border-blue-200 rounded-lg">
                    <p className="text-xs text-blue-800">
                      <strong>üìã Proceso:</strong> El pago se realizar√° despu√©s
                      de la aprobaci√≥n y validaci√≥n de tus documentos por parte
                      de nuestro equipo administrativo.
                    </p>
                  </div>
                </CardContent>
              </Card>
            )}

            <div className="flex gap-4">
              <Button
                type="button"
                variant="outline"
                onClick={onPrevious}
                className="flex-1"
              >
                Anterior
              </Button>
              <Button
                type="submit"
                className="flex-1"
                disabled={!data.plan_type}
              >
                Continuar con el Registro
              </Button>
            </div>
          </div>
        </form>
      </CardContent>
    </Card>
  );
}
